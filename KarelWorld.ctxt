#BlueJ class context
comment0.target=KarelWorld
comment0.text=\n\ The\ KarelWorld\ contains\ robots,\ beepers,\ and\ walls.\ It\ is\ a\ grid\ of\ streets\n\ (horizontal)\ and\ avenues\ (vertical).\ The\ standard\ world\ has\ 20\ streets\ and\ 20\n\ avenues.\n\ <p>\n\ First\ street\ is\ at\ the\ bottom\ and\ the\ numbers\ increase\ as\ you\ go\ up.\ First\n\ avenue\ is\ at\ the\ left\ and\ the\ numbers\ increase\ as\ you\ go\ to\ the\ right.\n\ <p>\n\ Robots\ and\ beepers\ are\ at\ the\ intersections.\ Horizontal\ walls\ cross\ avenues\n\ between\ streets.\ Vertical\ walls\ cross\ streets\ between\ avenues.\n\ <p>\n\ This\ class\ is\ final\ so\ no\ subclasses\ are\ possible.\n\ \n\ @version\ 1.0\ (Greenfoot)\ January\ 2010\n\ @author\ Joseph\ Bergin.\n\ \ \ \ \ \ \ \ \ <p>\n\ \ \ \ \ \ \ \ \ The\ explosion\ sound\ file\ came\ from\ code\ written\ by\ Poul\ Henriksen\n\ \ \ \ \ \ \ \ \ <p>\n\ \ \ \ \ \ \ \ \ The\ other\ sounds\ are\ from\ the\ Scratch\ system\:\ Copyright\ (c)\ 2007\n\ \ \ \ \ \ \ \ \ Massachusetts\ Institute\ of\ Technology\ and\ used\ under\ their\ permissive\n\ \ \ \ \ \ \ \ \ license.\n
comment1.params=
comment1.target=KarelWorld\ itself()
comment1.text=\n\ Obtain\ a\ reference\ to\ the\ current\ world\ object\n\ \n\ @return\ the\ current\ (most\ recently\ created)\ world\n
comment10.params=street\ avenue
comment10.target=void\ placeWallNorthOf(int,\ int)
comment10.text=\n\ Place\ a\ one\ segment\ horizontal\ wall\ North\ of\ a\ given\ corner\n\ \n\ @param\ street\n\ \ \ \ \ \ \ \ \ \ \ \ the\ street\ that\ will\ be\ just\ south\ of\ the\ new\ wall\ segment\n\ @param\ avenue\n\ \ \ \ \ \ \ \ \ \ \ \ the\ avenue\ that\ the\ wall\ will\ cross\n
comment11.params=streets\ avenues
comment11.target=void\ numberStreets(int,\ int)
comment12.params=image\ divide
comment12.target=void\ scaleImage(greenfoot.GreenfootImage,\ int)
comment12.text=\n\ The\ image\ files\ are\ 40\ pixels\ on\ a\ side.\ This\ is\ used\ to\ scale\ them\ to\n\ fit\ worlds\ with\ a\ user\ determined\ cellSize.\ Currently\ divide\ is\ 1\ for\n\ everything\ except\ beepers,\ where\ it\ is\ a\ 2.\ If\ you\ use\ your\ own\ images\n\ they\ should\ likely\ also\ be\ 40\ pixels\ and\ should\ be\ scaled\ so\ that\ they\n\ fit\ in\ a\ cell.\ If\ they\ don't\ fit\ in\ a\ cell\ they\ will\ "overlap"\ with\n\ robots\ in\ adjacent\ cells.\n\ \n\ @param\ image\n\ \ \ \ \ \ \ \ \ \ \ \ the\ image\ to\ scale\n\ @param\ divide\n\ \ \ \ \ \ \ \ \ \ \ \ the\ factor\ to\ shrink\ the\ image\ by\ (>\=\ 1).\n
comment13.params=
comment13.target=int\ delay()
comment13.text=\n\ Get\ the\ value\ of\ the\ delay\ between\ robot\ operations.\n\ \n
comment14.params=delay
comment14.target=void\ setDelay(int)
comment14.text=\n\ Set\ the\ value\ of\ the\ delay\ between\ robot\ operations.\ A\ value\ near\ 15\ is\n\ usually\ good.\ But\ between\ 0\ and\ 100.\ In\ effect\ it\ provides\ a\ scale\ value\n\ for\ the\ speed\ slider.\ A\ value\ of\ about\ 15\ (the\ default)\ is\ usually\ good\n\ but\ it\ depends\ on\ computer\ speed.\n
comment15.params=
comment15.target=void\ sleep()
comment15.text=\n\ Pause\ the\ operation\ of\ robots\ briefly\ so\ that\ the\ user\ can\ follow\ the\n\ changes\ visually.\n\ \n
comment16.params=filename
comment16.target=void\ readWorld(java.lang.String)
comment16.text=\n\ Read\ a\ world\ from\ a\ file\ in\ the\ current\ directory.\ It\ must\ be\ a\ legal\n\ world\ file\n\ \n\ @param\ filename\n\ \ \ \ \ \ \ \ \ \ \ \ the\ name\ of\ the\ file\ in\ the\ current\ directory\ to\ read\n
comment17.params=filename
comment17.target=void\ saveWorld(java.lang.String)
comment17.text=\n\ Save\ a\ world\ to\ a\ file\ in\ the\ current\ directory.\n\ \n\ @param\ filename\n\ \ \ \ \ \ \ \ \ \ \ \ the\ name\ of\ the\ file\ to\ write\n
comment18.params=directoryPath\ filename
comment18.target=void\ saveWorld(java.lang.String,\ java.lang.String)
comment18.text=\n\ Save\ the\ world\ in\ a\ file\ in\ the\ given\ directory\ path.\n\ \n\ @param\ directoryPath\n\ \ \ \ \ \ \ \ \ \ \ \ a\ full\ path\ to\ the\ directory\ in\ which\ to\ save\ the\ file\n\ @param\ filename\n\ \ \ \ \ \ \ \ \ \ \ \ the\ name\ of\ the\ file\ to\ be\ saved\n
comment19.params=directoryPath\ filename
comment19.target=void\ readWorld(java.lang.String,\ java.lang.String)
comment19.text=\n\ Read\ a\ world\ from\ a\ file\ in\ the\ given\ directory\ path.\n\ \n\ @param\ directoryPath\n\ \ \ \ \ \ \ \ \ \ \ \ a\ full\ path\ to\ the\ file\ containing\ the\ world\n\ @param\ filename\n\ \ \ \ \ \ \ \ \ \ \ \ the\ nameof\ the\ file\ to\ read\n
comment2.params=
comment2.target=KarelWorld()
comment2.text=\n\ Constructor\ for\ a\ default\ world\ (20\ Streets\ and\ 20\ Avenues\ unless\ the\n\ value\ has\ been\ changed\ with\ another\ world\ constructor).\ The\ cell\ size\ is\n\ the\ value\ last\ set\ in\ another\ constructor\ here\ or\ 40\ by\ default.\n\ \n
comment20.params=
comment20.target=void\ rereadLastWorld()
comment20.text=\n\ Read\ in\ the\ most\ recently\ read\ world\ file\ if\ any\n\ \n
comment21.params=commands
comment21.target=void\ getWorld(java.lang.String)
comment21.text=\n\ Read\ a\ world\ from\ a\ string.\n\ \n\ @param\ commands\n\ \ \ \ \ \ \ \ \ \ \ \ a\ string\ in\ the\ form\ of\ a\ world\ file.\ Tokens\ are\ separated\ by\n\ \ \ \ \ \ \ \ \ \ \ \ the\ usual\ white\ space\n
comment22.params=
comment22.target=void\ initializeThreads()
comment22.text=\n\ Initialize\ the\ robot\ thread\ system\ for\ a\ new\ execution.\ After\ a\ run\ using\n\ the\ thread\ system,\ this\ must\ be\ invoked\ before\ the\ next\ run\ or\ else\n\ nothing\ will\ happen.\ But\ call\ it\ before\ you\ add\ any\ runnable\ robots\ to\n\ the\ world.\n
comment23.params=runnableObject
comment23.target=void\ setupThread(java.lang.Runnable)
comment23.text=\n\ Let\ a\ robot\ run\ in\ its\ own\ thread.\ Put\ its\ "task"\ into\ the\ run\ method\ and\n\ pass\ the\ robot\ to\ this\ method.\ Runnable\ objects\ added\ like\ this\ can\ be\n\ started\ and\ stopped\ with\ the\ speed\ dialog.\ Robots\ can\ have\ their\ speed\n\ controlled\ by\ it\ also.\n\ \n\ @param\ runnableObject\n\ \ \ \ \ \ \ \ \ \ \ \ any\ runnable\ object,\ not\ just\ a\ robot\n
comment24.params=
comment24.target=void\ resumeThreads()
comment24.text=\n\ Resume\ all\ the\ threads\ after\ stopping\ them.\n
comment25.params=
comment25.target=void\ pauseThreads()
comment25.text=\n\ Suspend\ all\ the\ threads\ in\ the\ world.\n
comment26.params=
comment26.target=void\ startThreads()
comment26.text=\n\ Start\ all\ the\ threads\ initially.\ Call\ this\ only\ once\ in\ an\ execution.\n
comment27.params=
comment27.target=void\ clearWorldOfBeepers()
comment27.text=Remove\ all\ of\ the\ beepers\ from\ the\ world
comment28.params=
comment28.target=void\ clearWorldOfProps()
comment28.text=Remove\ all\ of\ the\ Props\ from\ the\ world
comment3.params=numberOfStreetsAndAvenues
comment3.target=KarelWorld(int)
comment3.text=\n\ Construct\ a\ world\ of\ any\ size\ 5\ or\ larger\ with\ the\ current\ cell\ size.\ Too\n\ large\ a\ world\ will\ fail\ with\ a\ memory\ error.\n\ \n\ @param\ numberOfStreetsAndAvenues\n\ \ \ \ \ \ \ \ \ \ \ \ the\ number\ of\ streets\ and\ avenues\ (>\=\ 5)\n
comment4.params=streets\ avenues\ cellSize
comment4.target=void\ setDefaultWorldSize(int,\ int,\ int)
comment4.text=\n\ Set\ the\ size\ of\ the\ world\ that\ will\ be\ created\ by\ default,\ such\ as\ when\n\ you\ press\ the\ Reset\ button\ in\ the\ main\ window.\ Initially\ the\ size\ is\ 20.\n\ The\ minimum\ size\ is\ defined\ (5)\ and\ a\ size\ that\ is\ too\ large\ will\ cause\n\ the\ system\ to\ run\ out\ of\ memory.\ This\ is\ run\ whenever\ you\ call\ a\n\ constructor\ that\ gives\ values\ to\ these\ concepts.\n\ \n\ @param\ streets\n\ \ \ \ \ \ \ \ \ \ \ \ the\ default\ number\ of\ streets\ of\ the\ world\ for\ this\ run.\n\ @param\ avenues\n\ \ \ \ \ \ \ \ \ \ \ \ the\ default\ number\ of\ avenues\n\ @param\ cellSize\n\ \ \ \ \ \ \ \ \ \ \ \ the\ default\ cell\ size\n
comment5.params=streets\ avenues
comment5.target=KarelWorld(int,\ int)
comment5.text=\n\ Create\ a\ world\ with\ a\ specified\ number\ of\ streets\ and\ avenues\ and\ the\n\ current\ cell\ size\n\ \n\ @param\ streets\n\ \ \ \ \ \ \ \ \ \ \ \ the\ number\ of\ streets\n\ @param\ avenues\n\ \ \ \ \ \ \ \ \ \ \ \ the\ number\ of\ avenues\n
comment6.params=streets\ avenues\ cellSize
comment6.target=KarelWorld(int,\ int,\ int)
comment6.text=\n\ Construct\ a\ world\ with\ a\ given\ number\ of\ streets\ (>\=\ 5)\ and\ avenues\ (>\=\n\ 5)\n\ \n\ @param\ streets\n\ \ \ \ \ \ \ \ \ \ \ \ the\ number\ of\ streets\ in\ the\ world\ >\=\ 5\n\ @param\ avenues\n\ \ \ \ \ \ \ \ \ \ \ \ the\ number\ of\ avenues\ in\ the\ world\ >\=\ 5\n\ @param\ cellSize\n\ \ \ \ \ \ \ \ \ \ \ \ the\ cell\ size\ of\ the\ world\ (>\ 20)\n
comment7.params=streets\ avenues
comment7.target=void\ paintBackground(int,\ int)
comment8.params=street\ avenue\ howMany
comment8.target=void\ placeBeepers(int,\ int,\ int)
comment8.text=\n\ Place\ any\ number\ of\ beepers\ on\ a\ corner\n\ \n\ @param\ street\n\ \ \ \ \ \ \ \ \ \ \ \ the\ street\ on\ which\ to\ place\ the\ beepers\n\ @param\ avenue\n\ \ \ \ \ \ \ \ \ \ \ \ the\ avenue\ on\ which\ to\ place\ the\ beepers\n\ @param\ howMany\n\ \ \ \ \ \ \ \ \ \ \ \ how\ many\ beepers\ to\ place\ (-1\ means\ infinity)\n
comment9.params=street\ avenue
comment9.target=void\ placeWallEastOf(int,\ int)
comment9.text=\n\ Place\ a\ one\ segment\ vertical\ wall\ East\ of\ a\ given\ corner\n\ \n\ @param\ street\n\ \ \ \ \ \ \ \ \ \ \ \ the\ street\ that\ the\ wall\ will\ cross\n\ @param\ avenue\n\ \ \ \ \ \ \ \ \ \ \ \ the\ avenue\ that\ will\ be\ just\ west\ of\ the\ new\ wall\ segment\n
numComments=29
